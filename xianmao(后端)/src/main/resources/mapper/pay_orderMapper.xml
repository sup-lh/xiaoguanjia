<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.pay_orderMapper">
  <resultMap id="BaseResultMap" type="com.domain.pay_order">
    <result column="aoid" jdbcType="VARCHAR" property="aoid" />
    <result column="order_id" jdbcType="VARCHAR" property="order_id" />
    <result column="pay_price" jdbcType="REAL" property="pay_price" />
    <result column="pay_time" jdbcType="VARCHAR" property="pay_time" />
    <result column="more" jdbcType="VARCHAR" property="more" />
    <result column="detail" jdbcType="VARCHAR" property="detail" />
    <result column="sign" jdbcType="VARCHAR" property="sign" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    aoid, order_id, pay_price, pay_time, `more`, detail, sign
  </sql>
  <select id="selectByExample" parameterType="com.domain.pay_orderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pay_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.domain.pay_orderExample">
    delete from pay_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.domain.pay_order">
    insert into pay_order (aoid, order_id, pay_price, 
      pay_time, `more`, detail, 
      sign)
    values (#{aoid,jdbcType=VARCHAR}, #{order_id,jdbcType=VARCHAR}, #{pay_price,jdbcType=REAL}, 
      #{pay_time,jdbcType=VARCHAR}, #{more,jdbcType=VARCHAR}, #{detail,jdbcType=VARCHAR}, 
      #{sign,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.domain.pay_order">
    insert into pay_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="aoid != null">
        aoid,
      </if>
      <if test="order_id != null">
        order_id,
      </if>
      <if test="pay_price != null">
        pay_price,
      </if>
      <if test="pay_time != null">
        pay_time,
      </if>
      <if test="more != null">
        `more`,
      </if>
      <if test="detail != null">
        detail,
      </if>
      <if test="sign != null">
        sign,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="aoid != null">
        #{aoid,jdbcType=VARCHAR},
      </if>
      <if test="order_id != null">
        #{order_id,jdbcType=VARCHAR},
      </if>
      <if test="pay_price != null">
        #{pay_price,jdbcType=REAL},
      </if>
      <if test="pay_time != null">
        #{pay_time,jdbcType=VARCHAR},
      </if>
      <if test="more != null">
        #{more,jdbcType=VARCHAR},
      </if>
      <if test="detail != null">
        #{detail,jdbcType=VARCHAR},
      </if>
      <if test="sign != null">
        #{sign,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.domain.pay_orderExample" resultType="java.lang.Long">
    select count(*) from pay_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pay_order
    <set>
      <if test="record.aoid != null">
        aoid = #{record.aoid,jdbcType=VARCHAR},
      </if>
      <if test="record.order_id != null">
        order_id = #{record.order_id,jdbcType=VARCHAR},
      </if>
      <if test="record.pay_price != null">
        pay_price = #{record.pay_price,jdbcType=REAL},
      </if>
      <if test="record.pay_time != null">
        pay_time = #{record.pay_time,jdbcType=VARCHAR},
      </if>
      <if test="record.more != null">
        `more` = #{record.more,jdbcType=VARCHAR},
      </if>
      <if test="record.detail != null">
        detail = #{record.detail,jdbcType=VARCHAR},
      </if>
      <if test="record.sign != null">
        sign = #{record.sign,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pay_order
    set aoid = #{record.aoid,jdbcType=VARCHAR},
      order_id = #{record.order_id,jdbcType=VARCHAR},
      pay_price = #{record.pay_price,jdbcType=REAL},
      pay_time = #{record.pay_time,jdbcType=VARCHAR},
      `more` = #{record.more,jdbcType=VARCHAR},
      detail = #{record.detail,jdbcType=VARCHAR},
      sign = #{record.sign,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>